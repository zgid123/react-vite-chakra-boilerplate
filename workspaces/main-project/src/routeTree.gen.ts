/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root';
import { Route as AuthRouteImport } from './routes/_auth/route';
import { Route as SignInIndexImport } from './routes/sign-in/index';
import { Route as AuthIndexImport } from './routes/_auth/index';

// Create/Update Routes

const AuthRouteRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any);

const SignInIndexRoute = SignInIndexImport.update({
  path: '/sign-in/',
  getParentRoute: () => rootRoute,
} as any);

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRouteRoute,
} as any);

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth';
      path: '';
      fullPath: '';
      preLoaderRoute: typeof AuthRouteImport;
      parentRoute: typeof rootRoute;
    };
    '/_auth/': {
      id: '/_auth/';
      path: '/';
      fullPath: '/';
      preLoaderRoute: typeof AuthIndexImport;
      parentRoute: typeof AuthRouteImport;
    };
    '/sign-in/': {
      id: '/sign-in/';
      path: '/sign-in';
      fullPath: '/sign-in';
      preLoaderRoute: typeof SignInIndexImport;
      parentRoute: typeof rootRoute;
    };
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRouteRoute: AuthRouteRoute.addChildren({ AuthIndexRoute }),
  SignInIndexRoute,
});

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/sign-in/"
      ]
    },
    "/_auth": {
      "filePath": "_auth/route.tsx",
      "children": [
        "/_auth/"
      ]
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/sign-in/": {
      "filePath": "sign-in/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
